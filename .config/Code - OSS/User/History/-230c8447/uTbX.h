#ifndef SSD1306_H
#define SSD1306H

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

const unsigned char bmp_infinity[] PROGMEM = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc0, 0x3f, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0xff,
    0xfc, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x3f, 0xf8, 0x7f, 0xe0, 0x7f, 0xfe, 0x07, 0xfe, 0x1f,
    0xf0, 0xff, 0xf8, 0x3f, 0xfc, 0x1f, 0xff, 0x0f, 0xe3, 0xff, 0xfe, 0x1f, 0xf8, 0x7f, 0xff, 0xc7,
    0xc3, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xc3, 0xc7, 0xff, 0xff, 0x87, 0xe1, 0xff, 0xff, 0xe3,
    0x8f, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, 0xf1, 0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xf1,
    0x1f, 0xff, 0xff, 0xf3, 0x8f, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xf8,
    0x1f, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xf8,
    0x1f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8,
    0x1f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xf1, 0xcf, 0xff, 0xff, 0xf8,
    0x8f, 0xff, 0xff, 0xe3, 0xc7, 0xff, 0xff, 0xf1, 0x8f, 0xff, 0xff, 0xc3, 0xc3, 0xff, 0xff, 0xf1,
    0xc7, 0xff, 0xff, 0x87, 0xe1, 0xff, 0xff, 0xe3, 0xc3, 0xff, 0xff, 0x0f, 0xf0, 0xff, 0xff, 0xc3,
    0xe3, 0xff, 0xfe, 0x1f, 0xf8, 0x7f, 0xff, 0xc7, 0xf0, 0xff, 0xf8, 0x3f, 0xfc, 0x1f, 0xff, 0x0f,
    0xf8, 0x7f, 0xe0, 0x7f, 0xfe, 0x07, 0xfe, 0x1f, 0xfc, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x3f,
    0xff, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xfc, 0x03, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

void updateDisplay(Adafruit_SSD1306 &display, int number);

void startUp(Adafruit_SSD1306 &display)
{
    display.clearDisplay();
    display.drawBitmap(0, 0, bmp_infinity, 64, 64, SSD1306_WHITE);
    display.display();
    delay(1000);
}

#endif